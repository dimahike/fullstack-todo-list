{"version":3,"sources":["reducer/constants/userConstants.js","components/Header.js","reducer/actions/userActions.js","reducer/constants/taskListConstants.js","components/SortPopup.js","components/Task.js","reducer/actions/taskActions.js","components/LoadingBox.js","components/MessageBox.js","components/CreatorTask.js","components/Pagination.js","data.js","pages/HomePage.js","pages/RegisterPage.js","pages/SigninPage.js","App.js","reportWebVitals.js","reducer/store.js","reducer/reducers/taskReducers.js","reducer/reducers/userReaducers.js","index.js"],"names":["USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNOUT","Header","userInfo","dispatch","useDispatch","className","to","name","onClick","localStorage","removeItem","type","document","location","href","TASK_LIST_REQUEST","TASK_LIST_SUCCESS","TASK_LIST_FAIL","CHANGE_STATUS_REQUEST","CHANGE_STATUS_SUCCESS","CHANGE_STATUS_FAIL","CREATE_TASK_REQUEST","CREATE_TASK_SUCCESS","CREATE_TASK_FAIL","highOrLow","SortPopup","React","memo","items","onClickSortPopup","activeSortType","decrIncr","arrItems","Object","values","indexActiveItem","keys","indexOf","useState","visiblePopup","setVisiblePopup","highOrLowIndex","setHighOrLowIndex","sortRef","useRef","handleOutsideClick","event","path","composedPath","target","includes","current","useEffect","body","addEventListener","ref","width","height","viewBox","fill","xmlns","d","map","item","index","onSelectItem","statuses","Task","convertedStatus","task","status","selectedStatus","setSelectedStatus","showSelecterStatus","setShowSelecterStatus","selector","taskId","_id","getState","a","userSignin","Axios","put","headers","Authorization","token","data","console","log","payload","response","message","userName","email","text","LoadingBox","MessageBox","props","variant","children","CreatorTask","setName","setEmail","setText","onSubmit","e","preventDefault","post","htmlFor","id","placeholder","onChange","value","row","Pagination","pages","page","selectPage","Array","numPage","sortItems","HomePage","selectedPage","setSelectedPage","sortBy","setSortBy","orderDicrIncr","setOrderDicrIncr","useSelector","state","changeStatus","loadingStatus","loading","successStatus","success","errorStatus","error","taskList","tasks","successCreateTask","createTask","successChangeStatus","pageNumber","sort","order","get","onSelectSortPopup","useCallback","decrIncrOrder","RegisterPage","password","setPassword","confirmPassword","setConfirmPassword","userRegister","history","push","alert","setItem","JSON","stringify","register","required","SigninPage","signin","App","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","reducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8110913c.chunk.js","sourcesContent":["export const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_SIGNIN_REQUEST = 'USER_SIGNIN_REQUEST';\r\nexport const USER_SIGNIN_SUCCESS = 'USER_SIGNIN_SUCCESS';\r\nexport const USER_SIGNIN_FAIL = 'USER_SIGNIN_FAIL';\r\n\r\nexport const USER_SIGNOUT = 'USER_SIGNOUT';\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { signout } from '../reducer/actions/userActions';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = ({ userInfo }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const signoutHandler = () => {\r\n    dispatch(signout());\r\n  };\r\n\r\n  return (\r\n    <header className=\"row space-btw\">\r\n      <div className=\"align-items\">\r\n        <Link to=\"/\" className=\"logo\">\r\n          TODO LIST\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        {userInfo ? (\r\n          <div className=\"dropdown\">\r\n            <div>\r\n              {userInfo.name} <i className=\"fa fa-caret-down\"></i>{' '}\r\n            </div>\r\n            <ul className=\"dropdown-content\">\r\n              <li>\r\n                <div to=\"/\" onClick={signoutHandler}>\r\n                  Sign Out\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <Link to=\"/signin\">Sign in</Link>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Axios from 'axios';\r\nimport {\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNOUT,\r\n} from '../constants/userConstants';\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post('/api/users/register', { name, email, password });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post('/api/users/signin', { email, password });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  localStorage.removeItem('cartItems');\r\n  localStorage.removeItem('shippingAddress');\r\n  dispatch({ type: USER_SIGNOUT });\r\n  document.location.href = '/signin';\r\n};\r\n","export const TASK_LIST_REQUEST = 'TASK_LIST_REQUEST';\r\nexport const TASK_LIST_SUCCESS = 'TASK_LIST_SUCCESS';\r\nexport const TASK_LIST_FAIL = 'TASK_LIST_FAIL';\r\n\r\nexport const CHANGE_STATUS_REQUEST = 'CHANGE_STATUS_REQUEST';\r\nexport const CHANGE_STATUS_SUCCESS = 'CHANGE_STATUS_SUCCESS';\r\nexport const CHANGE_STATUS_FAIL = 'CHANGE_STATUS_FAIL';\r\n\r\nexport const CREATE_TASK_REQUEST = 'CREATE_TASK_REQUEST';\r\nexport const CREATE_TASK_SUCCESS = 'CREATE_TASK_SUCCESS';\r\nexport const CREATE_TASK_FAIL = 'CREATE_TASK_FAIL';\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport './SortPopup.scss';\r\n\r\nconst highOrLow = ['lowest', 'highest'];\r\n\r\nconst SortPopup = React.memo(function SortPopup({\r\n  items,\r\n  onClickSortPopup,\r\n  activeSortType = 'userName',\r\n  decrIncr,\r\n}) {\r\n  const arrItems = Object.values(items);\r\n\r\n  const indexActiveItem = Object.keys(items).indexOf(activeSortType);\r\n\r\n  const [visiblePopup, setVisiblePopup] = useState(false);\r\n  const [highOrLowIndex, setHighOrLowIndex] = useState(0);\r\n  const sortRef = useRef();\r\n\r\n  const toggleVisiblePopup = () => {\r\n    setVisiblePopup(!visiblePopup);\r\n  };\r\n\r\n  const handleOutsideClick = (event) => {\r\n    const path =\r\n      event.path ||\r\n      (event.composedPath && event.composedPath()) ||\r\n      event.composedPath(event.target);\r\n    if (!path.includes(sortRef.current)) {\r\n      setVisiblePopup(false);\r\n    }\r\n  };\r\n\r\n  const onSelectItem = (indexActiveItem) => {\r\n    onClickSortPopup(Object.keys(items)[indexActiveItem]);\r\n    setVisiblePopup(false);\r\n  };\r\n\r\n  const sortHighOrLow = () => {\r\n    const convertHighOrLowIndex = highOrLowIndex === 0 ? 1 : highOrLowIndex === 1 && 0;\r\n    setHighOrLowIndex(convertHighOrLowIndex);\r\n    decrIncr(highOrLow[highOrLowIndex]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener('click', handleOutsideClick);\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={sortRef} className=\"sort\">\r\n      <div className=\"sort__label\">\r\n        <svg\r\n          className={visiblePopup ? 'rotared' : ''}\r\n          width=\"10\"\r\n          height=\"6\"\r\n          viewBox=\"0 0 10 6\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n            fill=\"#2C2C2C\"\r\n          />\r\n        </svg>\r\n        <b>Sort by:</b>\r\n        <span onClick={toggleVisiblePopup}>{arrItems[indexActiveItem]}</span>\r\n        <div>\r\n          <label />\r\n          <button className=\"small secondary\" onClick={sortHighOrLow}>\r\n            {highOrLow[highOrLowIndex]}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {visiblePopup && (\r\n        <div className=\"sort__popup\">\r\n          <ul>\r\n            {arrItems.map((item, index) => (\r\n              <li\r\n                key={`${item}_${index}`}\r\n                onClick={() => onSelectItem(index)}\r\n                className={arrItems[activeSortType] === item ? 'active' : ''}>\r\n                {item}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SortPopup;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeStatus } from '../reducer/actions/taskActions';\r\n\r\nimport './Task.scss';\r\n\r\nconst statuses = ['processing', 'complete'];\r\n\r\nconst Task = ({ task }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  let convertedStatus;\r\n\r\n  switch (task.status) {\r\n    case 0 || 1:\r\n      convertedStatus = 0;\r\n      break;\r\n    case 10 || 11:\r\n      convertedStatus = 1;\r\n      break;\r\n    default:\r\n      convertedStatus = 0;\r\n      break;\r\n  }\r\n\r\n  const [selectedStatus, setSelectedStatus] = useState(convertedStatus);\r\n  const [showSelecterStatus, setShowSelecterStatus] = useState(false);\r\n\r\n  const selector = (index) => {\r\n    setSelectedStatus(index);\r\n    setShowSelecterStatus(false);\r\n\r\n    dispatch(changeStatus(index, task._id));\r\n  };\r\n  return (\r\n    <div className=\"row task\">\r\n      <div className=\"row left\">\r\n        <div className=\"selector\">\r\n          <div className=\"row\">\r\n            <div onClick={() => setShowSelecterStatus(!showSelecterStatus)}>\r\n              <svg\r\n                className={showSelecterStatus ? 'rotared' : ''}\r\n                width=\"10\"\r\n                height=\"6\"\r\n                viewBox=\"0 0 10 6\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                  fill=\"#2C2C2C\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <span\r\n              className={`selected-status ${statuses[selectedStatus]}`}\r\n              onClick={() => setShowSelecterStatus(!showSelecterStatus)}>\r\n              {statuses[selectedStatus]}\r\n            </span>\r\n          </div>\r\n          <ul className={showSelecterStatus ? '' : 'show'}>\r\n            {statuses.map((status, index) => (\r\n              <li\r\n                className={statuses[selectedStatus] === status ? 'active' : ''}\r\n                onClick={() => selector(index)}>\r\n                {status}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"user-name\">\r\n          <span>{task.userName}</span>\r\n        </div>\r\n        <div className=\"email\">\r\n          <span>{task.email}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"row center\">\r\n        <span>{task.text} </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Axios from 'axios';\r\nimport {\r\n  TASK_LIST_REQUEST,\r\n  TASK_LIST_SUCCESS,\r\n  TASK_LIST_FAIL,\r\n  CHANGE_STATUS_REQUEST,\r\n  CHANGE_STATUS_SUCCESS,\r\n  CHANGE_STATUS_FAIL,\r\n  CREATE_TASK_REQUEST,\r\n  CREATE_TASK_SUCCESS,\r\n  CREATE_TASK_FAIL,\r\n} from '../constants/taskListConstants.js';\r\n\r\nexport const taskList = ({ pageNumber = 1, sort = 'userName', order = 'lowest' }) => async (\r\n  dispatch,\r\n) => {\r\n  console.log({ pageNumber, sort, order });\r\n  dispatch({\r\n    type: TASK_LIST_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await Axios.get(\r\n      `/api/tasks/?pageNumber=${pageNumber}&sortBy=${sort}&order=${order}`,\r\n    );\r\n\r\n    dispatch({\r\n      type: TASK_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const changeStatus = (status, taskId) => async (dispatch, getState) => {\r\n  dispatch({ type: CHANGE_STATUS_REQUEST });\r\n\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n\r\n  try {\r\n    const { data } = await Axios.put(\r\n      `/api/tasks/${taskId}/status`,\r\n      { status },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo?.token}`,\r\n        },\r\n      },\r\n    );\r\n\r\n    console.log('Changed status from reuest', data);\r\n\r\n    dispatch({\r\n      type: CHANGE_STATUS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHANGE_STATUS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createTask = (task) => async (dispatch) => {\r\n  dispatch({ type: CREATE_TASK_REQUEST });\r\n\r\n  try {\r\n    const { data } = await Axios.post(`/api/tasks`, task);\r\n\r\n    dispatch({\r\n      type: CREATE_TASK_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_TASK_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport './LoadingBox.scss';\r\n\r\nconst LoadingBox = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <i className=\"fa fa-spinner fa-spin\"></i> Loading ...\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingBox;\r\n","import React from 'react';\r\n\r\nimport './MesssageBox.scss';\r\n\r\nconst MessageBox = (props) => {\r\n  return <div className={`alert alert-${props.variant || 'info'}`}>{props.children}</div>;\r\n};\r\n\r\nexport default MessageBox;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createTask } from '../reducer/actions/taskActions';\r\n\r\nconst CreatorTask = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [text, setText] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log('work sumit');\r\n    dispatch(createTask({ userName: name, email, text }));\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={submitHandler}>\r\n      <div>\r\n        <h1>Create your task</h1>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          placeholder=\"Enter your name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email Address</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"task\">New Task </label>\r\n        <textarea\r\n          row=\"2\"\r\n          type=\"text\"\r\n          id=\"task\"\r\n          placeholder=\"Enter your new task\"\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label />\r\n        <button className=\"primary\" type=\"submit\">\r\n          ADD NEW TASK\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreatorTask;\r\n","import React from 'react';\r\n\r\nimport './Pagination.scss';\r\n\r\nconst Pagination = ({ pages, page, selectPage }) => {\r\n  return (\r\n    <div className=\"pagination row center\">\r\n      {[...Array(pages).keys()].map((numPage) => (\r\n        <div\r\n          className={numPage + 1 === page ? 'active' : ''}\r\n          key={`PageNum${numPage + 1}`}\r\n          onClick={() => selectPage(numPage + 1)}>\r\n          {numPage + 1}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export const sortItems = { userName: 'Name', email: 'Email', status: 'Status' };\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { taskList } from '../reducer/actions/taskActions';\r\nimport SortPopup from '../components/SortPopup';\r\nimport Task from '../components/Task';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport CreatorTask from '../components/CreatorTask';\r\nimport Pagination from '../components/Pagination';\r\nimport { sortItems } from '../data.js';\r\n\r\nconst HomePage = () => {\r\n  const [selectedPage, setSelectedPage] = useState();\r\n  const [sortBy, setSortBy] = useState('userName');\r\n  const [orderDicrIncr, setOrderDicrIncr] = useState('');\r\n  const { loading: loadingStatus, success: successStatus, error: errorStatus } = useSelector(\r\n    (state) => state.changeStatus,\r\n  );\r\n\r\n  const { loading, tasks, page, pages, error } = useSelector((state) => state.taskList);\r\n  const { success: successCreateTask } = useSelector((state) => state.createTask);\r\n  const { success: successChangeStatus } = useSelector((state) => state.changeStatus);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(taskList({ pageNumber: selectedPage, sort: sortBy, order: orderDicrIncr }));\r\n  }, [dispatch, successCreateTask, successChangeStatus, selectedPage, sortBy, orderDicrIncr]);\r\n\r\n  const selectPage = (page) => {\r\n    setSelectedPage(page);\r\n  };\r\n\r\n  const onSelectSortPopup = React.useCallback((sort) => {\r\n    setSortBy(sort);\r\n  }, []);\r\n\r\n  const decrIncrOrder = React.useCallback((decrIncr) => {\r\n    setOrderDicrIncr(decrIncr);\r\n  }, []);\r\n  return (\r\n    <div className=\"paper\">\r\n      <div>\r\n        <CreatorTask />\r\n        <div className=\"row space-btw\">\r\n          <h1>Task list</h1>\r\n          <SortPopup\r\n            onClickSortPopup={onSelectSortPopup}\r\n            activeSortType={sortBy}\r\n            items={sortItems}\r\n            decrIncr={decrIncrOrder}\r\n          />\r\n        </div>\r\n        {loadingStatus && <LoadingBox />}\r\n        {errorStatus ? (\r\n          <MessageBox variant=\"danger\">{errorStatus}</MessageBox>\r\n        ) : (\r\n          successStatus && <MessageBox variant=\"success\">{successStatus.message}</MessageBox>\r\n        )}\r\n        {loading ? (\r\n          <LoadingBox />\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          tasks.map((task) => <Task key={task._id} task={task} />)\r\n        )}\r\n        <Pagination page={page} pages={pages} selectPage={selectPage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { register } from '../reducer/actions/userActions';\r\n\r\nconst RegisterPage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { userInfo, loading, error } = userRegister;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert('Password and confirm password are not match.');\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push('/');\r\n    }\r\n  }, [userInfo, props.history]);\r\n\r\n  return (\r\n    <div className=\"paper register\">\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <div>\r\n          <h1>Create Account</h1>\r\n        </div>\r\n        {loading && <LoadingBox />}\r\n        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n        <div>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"Enter name\"\r\n            required\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            placeholder=\"Enter confirm password\"\r\n            required\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <button className=\"primary\" type=\"submit\">\r\n            Register\r\n          </button>\r\n        </div>\r\n\r\n        <div>\r\n          <label />\r\n          <div>\r\n            Already have an account? <Link to={`/signin`}>Sign in</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// import { signin } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { signin } from '../reducer/actions/userActions';\r\n\r\nimport './SigninPage.scss';\r\n\r\nconst SigninPage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  // const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo, loading, error } = userSignin;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signin(email, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push('/');\r\n    }\r\n  }, [userInfo, props.history]);\r\n\r\n  return (\r\n    <div className=\"paper signin\">\r\n      <form onSubmit={submitHandler} className=\"form\">\r\n        <div>\r\n          <h1>Sign In</h1>\r\n        </div>\r\n        {loading && <LoadingBox />}\r\n        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n        <div>\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <button className=\"primary\" type=\"submit\">\r\n            Sign In\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <div>\r\n            New customer? <Link to={`/register`}>Create your account</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SigninPage;\r\n","import { useSelector } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport RegisterPage from './pages/RegisterPage';\nimport SigninPage from './pages/SigninPage';\n\nfunction App() {\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  return (\n    <BrowserRouter>\n      <div className=\"grid-container\">\n        <Header userInfo={userInfo} />\n        <main>\n          <Route path=\"/signin\" component={SigninPage} />\n          <Route path=\"/register\" component={RegisterPage} />\n          <Route path=\"/\" component={HomePage} exact />\n        </main>\n        <footer>footer</footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {\r\n  changeStatusReducer,\r\n  createTaskReducer,\r\n  taskListReducer,\r\n} from './reducers/taskReducers.js';\r\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReaducers.js';\r\n\r\nconst initialState = {\r\n  userSignin: {\r\n    userInfo: localStorage.getItem('userInfo')\r\n      ? JSON.parse(localStorage.getItem('userInfo'))\r\n      : null,\r\n  },\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  taskList: taskListReducer,\r\n  changeStatus: changeStatusReducer,\r\n  createTask: createTaskReducer,\r\n  userSignin: userSigninReducer,\r\n  userRegister: userRegisterReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import {\r\n  CHANGE_STATUS_FAIL,\r\n  CHANGE_STATUS_REQUEST,\r\n  CHANGE_STATUS_SUCCESS,\r\n  CREATE_TASK_FAIL,\r\n  CREATE_TASK_REQUEST,\r\n  CREATE_TASK_SUCCESS,\r\n  TASK_LIST_FAIL,\r\n  TASK_LIST_REQUEST,\r\n  TASK_LIST_SUCCESS,\r\n} from '../constants/taskListConstants';\r\n\r\nexport const taskListReducer = (state = { loading: true, tasks: [] }, action) => {\r\n  switch (action.type) {\r\n    case TASK_LIST_REQUEST:\r\n      return { loading: true };\r\n    case TASK_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        tasks: action.payload.tasks,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case TASK_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const changeStatusReducer = (state = { loading: false }, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_STATUS_REQUEST:\r\n      return { loading: true };\r\n    case CHANGE_STATUS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: action.payload,\r\n      };\r\n    case CHANGE_STATUS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createTaskReducer = (state = { loading: false }, action) => {\r\n  switch (action.type) {\r\n    case CREATE_TASK_REQUEST:\r\n      return { loading: true };\r\n    case CREATE_TASK_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: action.payload,\r\n      };\r\n    case CREATE_TASK_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNOUT,\r\n} from '../constants/userConstants';\r\n\r\nexport const userSigninReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_SIGNIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_SIGNIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_SIGNIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_SIGNOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './reducer/store.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}